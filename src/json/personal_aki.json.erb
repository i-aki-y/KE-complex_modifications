{
    "title": "Personal rules (aki)",
    "rules": [{
            "description": "Copy by C-c & Yank by C-y",
            "manipulators": [{
                    <%#  %>
                    "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>],
                    "from": <%= from("c", ["control"], ["caps_lock", "option"]) %>,
                    "to": <%= to([["c", ["command"]]]) %>,
                    "type": "basic"
                },
                {
                    <%#  %>
                    "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>],
                    "from": <%= from("y", ["control"], ["caps_lock", "option"]) %>,
                    "to": <%= to([["v", ["command"]]]) %>,
                    "type": "basic"
                }
            ]
        },
        {
            "description": "Map C-s to command-f",
            "manipulators": [{
                "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>, <%= variable_unless("C-x", 1) %>],
                "from": <%= from("s", ["control"], ["caps_lock", "option"]) %>,
                "to": <%= to([["f", ["command"]]]) %>,
                "type": "basic"
            }]
        },
        {
            "description": "Exchange underscore and backslash",
            "manipulators": [
                {
                  "from": <%= from("international1", [], []) %>,
                  "to": <%= to([["international3", ["option"]]]) %>,
                  "type": "basic"
                }
            ]
        },
        {
            "description": "Undo by C-/",
            "manipulators": [
                {
                  "from": <%= from("slash", ["control"], []) %>,
                  "to": <%= to([["z", ["command"]]]) %>,
                  "type": "basic"
                }
            ]
        },
        {
            "description": "Toggle mark by C-space",
            "manipulators": [{
                    <%# set mark by C-spacebar unless marked %>
                    "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>, <%= variable_unless("mark_mode", 1) %>],
                    "from": <%= from("spacebar", ["control"], ["caps_lock", "shift"]) %>,
                    "to": <%= to_by_hash([{"set_variable" => ["mark_mode",1]}]) %>,
                    "type": "basic"
                },
                {
                    <%# unset mark by C-spacebar when marked %>
                    "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>, <%= variable_if("mark_mode", 1) %>],
                    "from": <%= from("spacebar", ["control"], ["caps_lock", "shift"]) %>,
                    "to": <%= to_by_hash([{"set_variable" => ["mark_mode", 0]}]) %>,
                    "type": "basic"
                },
                <%=
                items = ""
                from_keys = ["f", "b", "p", "n"]
                to_keys = ["right_arrow", "left_arrow", "up_arrow", "down_arrow"]

                from_keys.zip(to_keys) do |from_key, to_key|
                  items += <<-END_ITEM
                    {
                      "conditions": [#{frontmost_application_unless("emacs_key_bindings_exception")}, #{variable_if("mark_mode", 1)}],
                      "from": #{from(from_key, ["control"], ["caps_lock", "shift"])},
                      "to": #{to([[to_key, ["shift"]]])},
                      "type": "basic"
                    },
                  END_ITEM
                end
                items
                %>
                <%=
                items = ""
                from_keys = ["f", "b", "e", "a"]
                from_mans = ["option", "option", "control", "control"]
                to_keys = ["right_arrow", "left_arrow", "right_arrow", "left_arrow"]
                to_mods = ["option", "option", "command", "command"]
                from_keys.zip(from_mans, to_keys, to_mods) do |from_key, from_man, to_key, to_mod|
                  items += <<-END_ITEM
                    {
                      "conditions": [#{frontmost_application_unless("emacs_key_bindings_exception")}, #{variable_if("mark_mode", 1)}],
                      "from": #{from(from_key, [from_man], ["caps_lock", "shift"])},
                      "to": #{to([[to_key, [to_mod, "shift"]]])},
                      "type": "basic"
                    },
                  END_ITEM
                end
                items
                %>
                <%=
                items = ""
                from_keys = ["v", "v"]
                from_mans = ["control", "option"]
                to_keys = ["page_down", "page_up"]
                from_keys.zip(from_mans, to_keys) do |from_key, from_man, to_key|
                  items += <<-END_ITEM
                    {
                      "conditions": [#{frontmost_application_unless("emacs_key_bindings_exception")}, #{variable_if("mark_mode", 1)}],
                      "from": #{from(from_key, [from_man], ["caps_lock", "shift"])},
                      "to": #{to([[to_key, ["shift"]]])},
                      "type": "basic"
                    },
                  END_ITEM
                end
                items
                %> {
                    <%# copy %>
                    "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>],
                    "from": <%= from("w", ["option"], ["caps_lock", "shift"]) %>,
                    "to": <%= to_by_hash([["c", ["command"]], {"set_variable" => ["mark_mode", 0]}]) %>,
                    "type": "basic"
                },
                {
                    <%# cut %>
                    "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>],
                    "from": <%= from("w", ["control"], ["caps_lock", "shift"]) %>,
                    "to": <%= to_by_hash([["x", ["command"]], {"set_variable" => ["mark_mode", 0]}]) %>,
                    "type": "basic"
                },
                {
                    <%# cancel %>
                    "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>, <%= variable_if("mark_mode", 1) %>],
                    "from": <%= from("escape", [], []) %>,
                    "to": <%= to_by_hash([["escape"], {"set_variable" => ["mark_mode", 0]}]) %>,
                    "type": "basic"
                },
                {
                    <%# unmark by C-g %>
                    "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>, <%= variable_if("mark_mode", 1) %>],
                    "from": <%= from("g", ["control"], ["caps_lock", "shift"]) %>,
                    "to": <%= to_by_hash([{"set_variable" => ["mark_mode", 0]}]) %>,
                    "type": "basic"
                },
                {
                    <%# cancel by C-g %>
                    "conditions": [<%= frontmost_application_unless("emacs_key_bindings_exception") %>, <%= variable_unless("mark_mode", 1) %>],
                    "from": <%= from("g", ["control"], ["caps_lock", "shift"]) %>,
                    "to": <%= to_by_hash([["escape"], {"set_variable" => ["mark_mode", 0]}]) %>,
                    "type": "basic"
                }
            ]
        }
    ]
}
